import streamlit as st
import requests
import subprocess
import platform
import re

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Website (HTTP Status)
def check_website(url):
    """‡∏™‡πà‡∏á GET request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á URL ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ status code ‡πÅ‡∏•‡∏∞ reason phrase."""
    try:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° http:// ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ requests ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        if not url.startswith('http://') and not url.startswith('https://'):
            url = 'https://' + url
        
        response = requests.get(url, timeout=10) # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î timeout 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        return response.status_code, response.reason
    except requests.ConnectionError:
        return None, "Connection Error"
    except requests.Timeout:
        return None, "Timeout"
    except requests.RequestException as e:
        return None, f"Error: {str(e)}"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ Ping (ICMP)
def check_ping(host):
    """Ping ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Host (IP ‡∏´‡∏£‡∏∑‡∏≠ Domain) ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ True ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à, False ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à."""
    # ‡πÅ‡∏¢‡∏Å‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ domain/ip ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å url
    host_only = re.sub(r'^https?:\/\/', '', host).split('/')[0]

    try:
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î parameter ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ping ‡∏ï‡∏≤‡∏° OS
        param = '-n' if platform.system().lower() == 'windows' else '-c'
        command = ['ping', param, '1', host_only]
        
        # ‡πÉ‡∏ä‡πâ subprocess.run ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ç‡∏≠‡∏á ping ‡πÉ‡∏ô terminal
        response = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, timeout=5)
        
        # ‡∏ñ‡πâ‡∏≤ returncode ‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤ ping ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        return response.returncode == 0
    except (subprocess.TimeoutExpired, FileNotFoundError):
        return False

# ----- ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏Ç‡∏≠‡∏á Dashboard (UI) -----

st.set_page_config(page_title="Website Status Checker", page_icon="üì°")

st.title('üì° Website & IP Status Checker')
st.caption('‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ Gemini')

st.write("""
‡∏õ‡πâ‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Website ‡∏´‡∏£‡∏∑‡∏≠ IP Address ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡πÇ‡∏î‡∏¢‡πÉ‡∏™‡πà‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡πà‡∏≠‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î 
‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
""")

# ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
targets_input = st.text_area(
    '‡πÉ‡∏™‡πà Website ‡∏´‡∏£‡∏∑‡∏≠ IP ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà (‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î)', 
    height=150,
    value="google.com\nfacebook.com\n8.8.8.8\n192.168.1.255" # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
)

targets = [target.strip() for target in targets_input.split('\n') if target.strip()]

# ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
if st.button('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö'):
    if not targets:
        st.warning('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Website ‡∏´‡∏£‡∏∑‡∏≠ IP ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö')
    else:
        st.subheader('‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:')
        progress_bar = st.progress(0)
        
        for i, target in enumerate(targets):
            with st.spinner(f'‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö {target}...'):
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Ping
                is_pingable = check_ping(target)
                
                if is_pingable:
                    ping_status = "‚úÖ Ping ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
                else:
                    ping_status = "‚ùå Ping ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Website Status (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà IP Address)
                # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if any(c.isalpha() for c in target):
                    status_code, reason = check_website(target)
                    if status_code:
                        if 200 <= status_code < 300:
                            http_status = f"‚úÖ Website Online (Code: {status_code} {reason})"
                        else:
                            http_status = f"‚ö†Ô∏è Website ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ (Code: {status_code} {reason})"
                    else:
                        http_status = f"‚ùå Website Offline ({reason})"
                else:
                    # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô IP ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ HTTP
                    http_status = "‚ö™Ô∏è (‡πÄ‡∏õ‡πá‡∏ô IP Address)"

            # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            col1, col2 = st.columns(2)
            with col1:
                st.write(f"**{target}**")
            with col2:
                st.write(f"{ping_status} | {http_status}")

            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Progress Bar
            progress_bar.progress((i + 1) / len(targets))
        
        st.success('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!')
        st.balloons()